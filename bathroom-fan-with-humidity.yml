blueprint:
  name: Bathroom Fan Control
  description: Controls bathroom fan with timer and humidity management
  domain: automation
  input:
    fan_switch:
      name: Fan Switch
      selector:
        device:
          integration: switch
          entity: {}
    humidity_sensor:
      name: Humidity Sensor
      selector:
        entity:
          domain: sensor
          device_class: humidity
    minimum_run_time:
      name: Minimum Run Time
      description: "Minimum time in minutes the fan should run"
      default: 15
      selector:
        number:
          min: 1
          max: 60
          unit_of_measurement: "minutes"
    humidity_threshold:
      name: Humidity Threshold
      description: "Humidity percentage that triggers the fan"
      default: 50
      selector:
        number:
          min: 0
          max: 100
          unit_of_measurement: "%"

trigger:
  # Manual turn on trigger
  - platform: device
    type: turned_on
    device_id: !input fan_switch
    entity_id: !input fan_switch
    domain: switch
    id: "manual_on"

  # High humidity trigger
  - platform: numeric_state
    entity_id: !input humidity_sensor
    above: !input humidity_threshold
    id: "humidity_high"

  # Low humidity trigger
  - platform: numeric_state
    entity_id: !input humidity_sensor
    below: !input humidity_threshold
    id: "humidity_low"

action:
  - variables:
      trigger_source: "{{ trigger.id }}"

  - choose:
      # Handle manual turn on
      - conditions: "{{ trigger_source == 'manual_on' }}"
        sequence:
          - delay:
              minutes: !input minimum_run_time
          - if:
              - condition: numeric_state
                entity_id: !input humidity_sensor
                below: !input humidity_threshold
            then:
              - device_id: !input fan_switch
                domain: switch
                type: turn_off
                entity_id: !input fan_switch

      # Handle high humidity
      - conditions:
          - "{{ trigger_source == 'humidity_high' }}"
          - condition: device
            type: is_off
            device_id: !input fan_switch
            entity_id: !input fan_switch
            domain: switch
        sequence:
          - device_id: !input fan_switch
            domain: switch
            type: turn_on
            entity_id: !input fan_switch

      # Handle low humidity
      - conditions:
          - "{{ trigger_source == 'humidity_low' }}"
          - condition: template
            value_template: >
              {% set last_on = state_attr(fan_switch, 'last_changed') %}
              {% set min_time = timedelta(minutes=minimum_run_time) %}
              {{ (now() - last_on) > min_time }}
        sequence:
          - device_id: !input fan_switch
            domain: switch
            type: turn_off
            entity_id: !input fan_switch

mode: restart
